version: '2.3'

services:
  api_prs-cmd:
    container_name: api.prs-cmd
    image: node:lts
    env_file:
      - ./services/.env
    working_dir: /usr/src/app
    volumes:
      - ./services/api:/usr/src/app
    ports:
      - '5554:3000'
    command: npm run watch
    depends_on:
      - db
    links:
      - db
    networks:
      - iut

  api_sv-cmd:
    container_name: api.sv-cmd
    image: node:lts
    env_file:
      - ./services/.env
    working_dir: /usr/src/app
    volumes:
      - ./services/api_backoffice:/usr/src/app
    ports:
      - '5555:3000'
    command: npm run watch
    depends_on:
      - db
    links:
      - db
      - api_prs-cmd
    networks:
      - iut

  api_auth:
    container_name: api.auth
    image: node:lts
    env_file:
      - ./services/.env
    working_dir: /usr/src/app
    volumes:
      - ./services/api_auth:/usr/src/app
    ports:
      - '3333:3000'
    command: npm run watch
    depends_on:
      - db
    links:
      - db
    networks:
      - iut

  db:
    container_name: db
    image: mariadb:latest
    env_file:
      - ./services/.env
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'pwd'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - ./services/db:/var/lib/mysql
      - ./init_db-users.sql:/docker-entrypoint-initdb.d/0.sql
      - ./tables.sql:/docker-entrypoint-initdb.d/1.sql
      - ./datas.sql:/docker-entrypoint-initdb.d/2.sql
    networks:
      - iut

  adminer:
    container_name: adminer
    image: adminer
    depends_on:
      - db
    ports:
      - 5000:8080
    networks:
      - iut

networks:
  iut:
    driver: bridge