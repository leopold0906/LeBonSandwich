version: '2.3'

services:
  api_prs-cmd:
    container_name: api.prs-cmd
    image: node:lts
    env_file:
      - ./services/.env
    working_dir: /usr/src/app
    volumes:
      - ./services/api:/usr/src/app
    ports:
      - '5554:3000'
    command: npm run watch
    depends_on:
      - db
    links:
      - db
    networks:
      - iut

  api_sv-cmd:
    container_name: api.sv-cmd
    image: node:lts
    env_file:
      - ./services/.env
    working_dir: /usr/src/app
    volumes:
      - ./services/api_backoffice:/usr/src/app
    ports:
      - '5555:3000'
    command: npm run watch
    depends_on:
      - db
    links:
      - db
    networks:
      - iut

  api_auth:
    container_name: api.auth
    image: node:lts
    env_file:
      - ./services/.env
    working_dir: /usr/src/app
    volumes:
      - ./services/api_auth:/usr/src/app
    ports:
      - '3333:3000'
    command: npm run watch
    depends_on:
      - db
    links:
      - db
    networks:
      - iut

  api_gtw-back:
    container_name: api.gtw-back
    image: node:lts
    env_file:
      - ./services/.env
    working_dir: /usr/src/app
    volumes:
      - ./services/api_gtw-back:/usr/src/app
    ports:
      - '8081:3000'
    command: npm run watch
    depends_on:
      - db
      - api_auth
      - api_sv-cmd
    links:
      - db
      - api_auth
      - api_sv-cmd
    networks:
      - iut

  api_gtw-front:
    container_name: api.gtw-front
    image: node:lts
    env_file:
      - ./services/.env
    working_dir: /usr/src/app
    volumes:
      - ./services/api_gtw-front:/usr/src/app
    ports:
      - '8082:3000'
    command: npm run watch
    depends_on:
      - directus
      - api_prs-cmd
    links:
      - directus
      - api_prs-cmd
    networks:
      - iut

  db:
    container_name: db
    image: mariadb:latest
    env_file:
      - ./services/.env
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'pwd'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - ./services/db:/var/lib/mysql
      - ./tables.sql:/docker-entrypoint-initdb.d/1.sql
      - ./datas.sql:/docker-entrypoint-initdb.d/2.sql
      - ./init_db-users.sql:/docker-entrypoint-initdb.d/3.sql
    networks:
      - iut

  adminer:
    container_name: adminer
    image: adminer
    depends_on:
      - database
    ports:
      - '5000:8080'
    networks:
      - iut

  database:
    container_name: database
    image: postgres
    volumes:
      - ./services/db_catalogue:/var/lib/postgresql/data
    networks:
      - directus
    environment:
      POSTGRES_USER: 'directus'
      POSTGRES_PASSWORD: 'directus'
      POSTGRES_DB: 'catalogue'

  cache:
    container_name: cache
    image: redis:6
    networks:
      - directus

  directus:
      container_name: directus
      image: directus/directus:latest
      ports:
        - '8055:8055'
      volumes:
        # By default, uploads are stored in /directus/uploads
        # Always make sure your volumes matches the storage root when using
        # local driver
        - ./services/directus/uploads:/directus/uploads
        # Make sure to also mount the volume when using SQLite
        # - ./database:/directus/database
        # If you want to load extensions from the host
        # - ./extensions:/directus/extensions
      networks:
        - directus
      depends_on:
        - cache
        - database
      environment:
        KEY: '255d861b-5ea1-5996-9aa3-922530ec40b1'
        SECRET: '6116487b-cda1-52c2-b5b5-c8022c45e263'

        DB_CLIENT: 'pg'
        DB_HOST: 'database'
        DB_PORT: '5432'
        DB_DATABASE: 'catalogue'
        DB_USER: 'directus'
        DB_PASSWORD: 'directus'

        CACHE_ENABLED: 'true'
        CACHE_STORE: 'redis'
        CACHE_REDIS: 'redis://cache:6379'

        ADMIN_EMAIL: 'admin@example.com'
        ADMIN_PASSWORD: 'd1r3ctu5'

        # Make sure to set this in production
        # (see https://docs.directus.io/configuration/config-options/#general)
        # PUBLIC_URL: 'https://directus.example.com'

networks:
  directus:
  iut:
  #  driver: bridge